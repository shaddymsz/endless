var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import GrapesJS from 'grapesjs';
import mjml from 'grapesjs-mjml';
import newsletter from 'grapesjs-preset-newsletter';
import webpage from 'grapesjs-preset-webpage';
import React from 'react';
var presets = {
    webpage: webpage,
    newsletter: newsletter,
    mjml: mjml,
};
var Editor = React.forwardRef(function (props, ref) {
    var onInit = props.onInit, id = props.id, blockManager = props.blockManager, styleManager = props.styleManager, storageManager = props.storageManager, width = props.width, height = props.height, propPlugins = props.plugins, presetType = props.presetType, children = props.children, onDestroy = props.onDestroy;
    var _a = React.useState(null), editor = _a[0], setEditor = _a[1];
    React.useEffect(function () {
        var editor = GrapesJS.init({
            container: "#" + id,
            fromElement: true,
            blockManager: blockManager,
            styleManager: styleManager,
            storageManager: storageManager,
            width: width,
            height: height,
            plugins: __spreadArrays([
                presets[presetType]
            ], propPlugins),
        });
        if (typeof onInit === 'function') {
            onInit(editor);
        }
        setEditor(editor);
        return function cleanup() {
            if (editor) {
                if (typeof onDestroy === 'function') {
                    onDestroy(editor);
                }
                GrapesJS.editors = GrapesJS.editors.filter(function (e) { return e !== editor; });
                editor.destroy();
                if (document) {
                    var container = document.getElementById(id);
                    if (container) {
                        container.innerHTML = '';
                    }
                }
            }
        };
    }, [blockManager, height, id, onDestroy, onInit, presetType, propPlugins, storageManager, styleManager, width]);
    React.useImperativeHandle(ref, function () {
        return editor;
    });
    return (React.createElement("div", { id: id }, children));
});
Editor.defaultProps = {
    id: 'grapesjs-react-editor',
    presetType: 'newsletter',
    plugins: [],
    blocks: [],
    blockManager: {},
    storageManager: {},
    styleManager: {},
    width: 'auto',
    height: '100vh',
    components: [],
};
export default Editor;
window.GrapesJS = GrapesJS;
//# sourceMappingURL=Editor.js.map